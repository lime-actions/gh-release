name: Test
run-name: Testing the action
on:
  push:
    paths:
    - 'action.yaml'
    - '.github/workflows/test.yaml'

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          action.yaml
        sparse-checkout-cone-mode: false
    - name: Test commit
      run: |
        touch test
        git config user.email 'github-actions@users.noreply.github.com'
        git config user.name 'GitHub Actions'
        git add test
        git commit -m 'test1.test2.test3'
    - name: Release from commit
      uses: ./
      with:
        dry-run: true
    - name: Check
      run: |
        if ! git rev-parse 'test1.test2.test3' >/dev/null 2>&1
        then
          exit 101
        fi
    - name: Reset tags
      run: |
        comm -23 <(git tag | sort) <(git ls-remote --tags origin | cut -f2 \
        | sed 's#refs/tags/##' | sort) \
        | xargs -n 1 git tag -d
    - name: Release from tag
      id: release-from-tag
      uses: ./
      with:
        tag: 'test1.test2.test3'
        dry-run: true
    - name: Check
      run: |
        if [ '${{ steps.release-from-tag.outputs.tag }}' != 'test1.test2.test3' ]; then exit 101
        elif ! git rev-parse 'test1.test2.test3' >/dev/null 2>&1; then exit 102
        elif ! git rev-parse 'test1.test2' >/dev/null 2>&1; then exit 103
        elif ! git rev-parse 'test1' >/dev/null 2>&1; then exit 104
        elif ! git rev-parse 'latest' >/dev/null 2>&1; then exit 105
        fi
    - name: Reset tags
      run: |
        comm -23 <(git tag | sort) <(git ls-remote --tags origin | cut -f2 \
        | sed 's#refs/tags/##' | sort) \
        | xargs -n 1 git tag -d
    - name: Release with different latest
      uses: ./
      with:
        tag: 'test1.test2.test3'
        dry-run: true
        latest-ref: 'new'
    - name: Check
      run: |
        if ! git rev-parse 'new' >/dev/null 2>&1; then exit 101
        fi
    - name: Reset tags
      run: |
        comm -23 <(git tag | sort) <(git ls-remote --tags origin | cut -f2 \
        | sed 's#refs/tags/##' | sort) \
        | xargs -n 1 git tag -d
    - name: Release candidate
      uses: ./
      with:
        tag: 'test1.test2.test3'
        release-candidate: true
        dry-run: true
    - name: Check
      run: |
        if ! git rev-parse 'test1.test2.test3.rc1' >/dev/null 2>&1; then
          exit 101
        elif ! git rev-parse 'latest-rc' >/dev/null 2>&1; then
          exit 102
        fi
    - name: Reset tags
      run: |
        comm -23 <(git tag | sort) <(git ls-remote --tags origin | cut -f2 \
        | sed 's#refs/tags/##' | sort) \
        | xargs -n 1 git tag -d
    - name: Release candidate suffix
      id: release-suffix
      uses: ./
      with:
        tag: 'test1.test2.test3'
        release-candidate: true
        release-candidate-suffix: 'RC'
        dry-run: true
    - name: Fail
      if: steps.release-suffix.outputs.tag != 'test1.test2.test3.RC1'
      run: |
        echo "${{ steps.release-suffix.outputs.tag }}"
        exit 101
